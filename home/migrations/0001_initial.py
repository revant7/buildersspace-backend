# Generated by Django 5.1.6 on 2025-02-28 13:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=256)),
                ('last_name', models.CharField(blank=True, max_length=256, null=True)),
                ('mobile_number', models.CharField(max_length=15, unique=True)),
                ('is_participant', models.BooleanField(default=False)),
                ('is_attendee', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Attendee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='attendee_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='participant_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('house', models.CharField(choices=[('Gryffindor', 'Gryffindor'), ('Hufflepuff', 'Hufflepuff'), ('Ravenclaw', 'Ravenclaw'), ('Slytherin', 'Slytherin'), ('Phoenix', 'Phoenix')], max_length=32)),
                ('profile_picture', models.ImageField(blank=True, default='default/Profile.png', null=True, upload_to='participant/profile/')),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
            },
        ),
        migrations.CreateModel(
            name='SocialLinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instagram', models.URLField(blank=True, null=True)),
                ('github', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GryffindorParticipant',
            fields=[
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='home.participant')),
            ],
            options={
                'verbose_name': 'Gryffindor Participant',
                'verbose_name_plural': 'Gryffindor Participants',
            },
        ),
        migrations.CreateModel(
            name='HufflepuffParticipant',
            fields=[
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='home.participant')),
            ],
            options={
                'verbose_name': 'Hufflepuff Participant',
                'verbose_name_plural': 'Hufflepuff Participants',
            },
        ),
        migrations.CreateModel(
            name='PhoenixParticipant',
            fields=[
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='home.participant')),
            ],
            options={
                'verbose_name': 'Phoenix Participant',
                'verbose_name_plural': 'Phoenix Participants',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='participant_project', serialize=False, to='home.participant')),
                ('project_idea_title', models.TextField(blank=True, null=True)),
                ('project_idea_description', models.TextField(blank=True, null=True)),
                ('project_experience', models.TextField(blank=True, null=True)),
                ('project_video_link', models.URLField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='RavenclawParticipant',
            fields=[
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='home.participant')),
            ],
            options={
                'verbose_name': 'Ravenclaw Participant',
                'verbose_name_plural': 'Ravenclaw Participants',
            },
        ),
        migrations.CreateModel(
            name='SlytherinParticipant',
            fields=[
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='home.participant')),
            ],
            options={
                'verbose_name': 'Slytherin Participant',
                'verbose_name_plural': 'Slytherin Participants',
            },
        ),
        migrations.CreateModel(
            name='ParticipantNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_title', models.CharField(blank=True, max_length=256, null=True)),
                ('notification_message', models.TextField(default='')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('house', models.CharField(blank=True, choices=[('Gryffindor', 'Gryffindor'), ('Hufflepuff', 'Hufflepuff'), ('Ravenclaw', 'Ravenclaw'), ('Slytherin', 'Slytherin'), ('Phoenix', 'Phoenix')], max_length=32, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_notifications', to='home.participant')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='VoteCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vote_count', to='home.project')),
            ],
            options={
                'verbose_name': 'Vote Count',
                'verbose_name_plural': 'Vote Counts',
            },
        ),
        migrations.CreateModel(
            name='LikeCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='like_count', to='home.project')),
            ],
            options={
                'verbose_name': 'Like Count',
                'verbose_name_plural': 'Like Counts',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('attendee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendee_like', to='home.attendee')),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participant_like', to='home.participant')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_likes', to='home.project')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendees', to='home.attendee')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_votes', to='home.project')),
            ],
            options={
                'unique_together': {('attendee', 'project')},
            },
        ),
    ]
